{"version":3,"sources":["StateProvider.js","reducer.js","Search.js","Home.js","useGoogleSearch.js","keys.js","SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","to","Avatar","src","alt","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","Link","href","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","link","pagemap","cse_image","length","displayLink","title","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9a0dd87f.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children\r\n}) => (\r\n\r\n        <StateContext.Provider value={useReducer(reducer,\r\n            initialState)}>\r\n            {children}\r\n        </StateContext.Provider>\r\n    );\r\n\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","export const initialState = {\r\n    term: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_SEARCH_TERM: \"SET_SEARCH_TERM\",\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    \r\n    switch (action.type) {\r\n        case actionTypes.SET_SEARCH_TERM:\r\n            return {\r\n                ...state,\r\n                term: action.term,\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default reducer; ","import React, { useState } from 'react'\r\nimport './Search.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { Button } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {useStateValue} from './StateProvider'\r\nimport {actionTypes} from './reducer';\r\n\r\n\r\nfunction Search({ hideButtons = false }) {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const history = useHistory();\r\n    \r\n    const search = e => {\r\n        e.preventDefault();\r\n        \r\n        console.log('Search Button >>', input)  \r\n\r\n        \r\n        dispatch ({\r\n            type: actionTypes.SET_SEARCH_TERM,\r\n            term: input\r\n        })\r\n        history.push('/search')\r\n    }\r\n\r\n\r\n    return (\r\n        <form className='search'>\r\n            <div className='search_input'>\r\n                <SearchIcon className='search_inputIcon' />\r\n                <input value={input} onChange={e => setInput(e.target.value)} />\r\n                <MicIcon />\r\n            </div>\r\n\r\n            {!hideButtons ? (\r\n\r\n                    <div className='search_buttons'>\r\n                        <Button type='submit' onClick={search} variant='outlined'>Google Search</Button>\r\n                        <Button variant='outlined'>I'm Feeling Lucky</Button>\r\n                    </div>\r\n            ) : (\r\n                    <div className='search_buttons'>\r\n                        <Button className='search_buttonsHidden' type='submit' onClick={search} variant='outlined'>Google Search</Button>\r\n                        <Button className='search_buttonsHidden' variant='outlined'>I'm Feeling Lucky</Button>\r\n                    </div>\r\n                )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react';\r\nimport './Home.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AppsIcon from '@material-ui/icons/Apps'\r\nimport { Avatar } from '@material-ui/core'\r\nimport Search from './Search'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className='home'>\r\n            <div className='home_header'>\r\n                <div className='home_headerLeft'>\r\n                    <Link to='/about'>About</Link>\r\n                    <Link to='/store'>Store</Link>\r\n                </div>\r\n                <div className='home_headerRight'>\r\n                    <Link to='/gmail'>Gmail</Link>\r\n                    <Link to='/images'>Images</Link>\r\n                    <AppsIcon />\r\n                    <Avatar />\r\n                </div>\r\n            </div>\r\n\r\n            <div className='home_body'>\r\n                <img\r\n                    src='https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png'\r\n                    alt=''\r\n                />\r\n\r\n                <div className='home_inputContainer'>\r\n                    <Search />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from 'react'\r\nimport API_KEY from './keys'\r\n\r\nconst CONTEXT_KEY = 'c958f349124a86eb3' \r\n\r\nconst useGoogleSearch = (term) => {\r\n\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData =  async() => {\r\n            \r\n            fetch(\r\n                `https://www.googleapis.com/customsearch/v1?key=\r\n                ${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n            ) \r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setData(result)\r\n            })\r\n        }\r\n\r\n        fetchData();         \r\n    }, [term])\r\n\r\n    \r\n    return { data }\r\n}\r\n\r\nexport default useGoogleSearch;","export const API_KEY = 'AIzaSyDR_FO-9bSQ5IZFsxInSFpgrcNRmuz4HyQ'\r\n\r\nexport default API_KEY;\r\n","import React from 'react'\r\nimport './SearchPage.css';\r\nimport { useStateValue } from \"./StateProvider\"\r\n\r\nimport useGoogleSearch from './useGoogleSearch';\r\n\r\nimport { Link } from '@material-ui/core';\r\nimport Search from './Search'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nfunction SearchPage() {\r\n\r\n    const [{ term }, disptch] = useStateValue();\r\n    const { data } = useGoogleSearch(term)\r\n\r\n    // https://developers.google.com/custom-search/v1/using-rest\r\n\r\n    // AIzaSyBvTU4lFZ-dtaVTu7vKykXF5uz8bs-6XU0\r\n\r\n    // https://cse.google.com/cse/create/new\r\n\r\n    // SE ID\r\n    // 99ded83c9ac50d5c9\r\n\r\n    console.log(data)\r\n    \r\n    return (\r\n\r\n        <div className='searchPage'>\r\n            <div className='searchPage_header'>\r\n                <Link to='/'>\r\n                    <a href='/'>\r\n                    <img\r\n                        className='searchPage_logo'\r\n                        src='https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png'\r\n                        alt=''\r\n                    />\r\n                    </a>\r\n                </Link>\r\n                <div className='searchPage_headerBody'>\r\n                    <Search hideButtons />\r\n                    <div className='searchPage_options' >\r\n                        <div className='searchPage_optionsLeft'>\r\n\r\n                            <div className='searchPage_option'>\r\n                                <SearchIcon />\r\n                                <Link to='/all'>All</Link>\r\n                            </div>\r\n                            <div className='searchPage_option'>\r\n                                <DescriptionIcon />\r\n                                <Link to='/news'>News</Link>\r\n                            </div>\r\n                            <div className='searchPage_option'>\r\n                                <ImageIcon />\r\n                                <Link to='/images'>Images</Link>\r\n                            </div>\r\n                            <div className='searchPage_option'>\r\n                                <LocalOfferIcon />\r\n                                <Link to='/shopping'>shopping</Link>\r\n                            </div>\r\n                            <div className='searchPage_option'>\r\n                                <RoomIcon />\r\n                                <Link to='/maps'>maps</Link>\r\n                            </div>\r\n                            <div className='searchPage_option'>\r\n                                < MoreVertIcon />\r\n                                <Link to='/more'>more</Link>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='searchPage_optionsRight'>\r\n                            <div className='searchPage_option'>\r\n                                <Link to='/settings'>Settings</Link>\r\n                            </div>\r\n                            <div className='searchPage_option'>\r\n                                <Link to='/tools'>Tools</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {term && (\r\n                <div className='searchPage_results'>\r\n                    <p className='searchPage_resultCount'>\r\n                        About {data?.searchInformation.formattedTotalResults} results, in ({data?.searchInformation.formattedSearchTime} seconds) for <i>{term}</i>\r\n                    </p>\r\n                    \r\n                    {data?.items.map(item => (\r\n                        <div className='searchPage_result'>\r\n                            <a target='_blank' href={item.link}>\r\n                                {item.pagemap?.cse_image?.length > 0 && item.pagemap?.cse_image[0]?.src && (\r\n                                    <img \r\n                                        className='searchPage_resultImage'\r\n                                        src={item.pagemap?.cse_image[0]?.src}\r\n                                    />\r\n                                )}\r\n                                {item.displayLink}&#9660;\r\n\r\n                            </a>\r\n                            <a target='_blank'\r\n                            className='searchPage_resultTitle' href={item.link}>\r\n                                <h2>{item.title}</h2>\r\n                            </a>\r\n                            <p className='searchPage_resultSnippet'>\r\n                                {item.snippet}\r\n                            </p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage\r\n","import React from 'react';\nimport './App.css';\nimport Home from './Home';\nimport SearchPage from './SearchPage';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/search\">\n\n            <SearchPage />\n          \n          </Route>\n          <Route path='/'>\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport reducer, {initialState} from \"./reducer\";\nimport {StateProvider} from './StateProvider'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}\n    >\n      <App />\n    </StateProvider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}